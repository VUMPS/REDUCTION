{redpar,                       ; named structure, passed by reference
rootdir: '/data/',             ; root directory. All other paths are relative to rootdir
logdir:  'tous/vumps/logsheets/',         ; log sheets 
plotsdir: 'tous/vumps/plots/', ; directory to put encapsulated postscript and PNG plots
fitsdir:    'tous/vumps/fitspec/',        ; reduced spectra in FITS format
thidfiledir: 'tous/vumps/thidfile/', ; thid saved in *.thid files
rawdir: 'raw/vumps/',                ; raw files
imdir:   'yymmdd/',            ; yymmdd/ image directory with raw night data (*)
date:   'yymmdd',            ; yymmdd/ image directory with raw night data (*)
seqnum:   'flat',            ; the image sequence number (*)
versiond:   'date',            ; systime when this file was created (*)
versionn:   '3.0',            ; version of the reduction code
red_prefix: 'r',               ; prepend reduced files with this additional prefix
prefix:  'vumpsyymmdd.',         ; file prefix (*)
suffix: '.fit',                ; the file suffix (e.g., .fit, .fits, .FITS, .FITZ)
flatdir:  'tous/vumps/flats/',            ; summed flat fields
biasdir:  'tous/vumps/medbias/',            ; median bias frames
biasmode: 0,            ; 0: use median bias frame, 1: use median overscan row
orderdir: 'tous/vumps/orders/',           ; order locations
xdim: 4200,                  ;number of pixels in x dimension
ydim: 4112,                  ;number of pixels in y dimension
xtrim: [0,4087],             ; trim along dispersion direction, UNBINNED pixels
ytrim: [0,4111],             ; vertical trim in cross-disp., UNBINNED pixels
readmodes:  ['fast','medium', 'slow'], ; readout modes
;order of gains are botleft, botright, upright, upleft
gains: [[2.07,2.10,2.08,2.16], [1.99,2.00,2.03,2.06], [1.64,1.62,1.67,1.68]], ; gain  [ [4*]fast, [4*]med, [4*]slow], el/ADU  corrected
ron:   7.,                     ; RON estimate [ADU], to be calculated from bias (*)
gain:   1.,                    ; actual gain [el/adu] (*)
binning: [1,1],                ; will contain actual binning [row,col] from the header (*)
resolutionidx:  0,      ; index of the resolution (low, med, hgh)
;FLATNORM OPTIONS:
; OLD 0. no normalization. Flatfield with median flat AFTER image extraction
;0. no normalization. Flatfield with weighted mean flat AFTER image extraction
;1. normalize the flats before finding the median flat. flat AFTER image extraction
;2. normalize BEFORE image extraction. No normalization. Flat field with a running median flat.
;3, use rayclean to coadd the extracted quartz spectra.
flatnorm:  1,                      
minflatval: 1d4,       ; minimum acceptable value for flats 
slicerflat:  1,                      ; set this to 1 to use the narrow slit + shift & width change for order finding
pkcoefs: [ 213.03357, 80.356662, -0.70048672, 0.0064285174, -6.2983188e-05, 4.3664597e-07, -1.3355842e-09], ;150818
;pkcoefs: [211.61396, 81.350356, -0.76796213, 0.0083985481, -9.3219086e-05, 6.8078450e-07,-2.1500871e-09], ; 150805 vikl
;pkcoefs: [77.080234, -18.380945, 4.7748226, -0.19179651, 0.0036860003, -3.4447079e-05, 1.2513080e-07], ; test run for 150710, 84 orders extracted
;pkcoefs: [150.27240, 83.318230, -0.75447103, 0.0072940427, -7.1697400e-05, 4.8542551e-07, -1.4693739e-09], ;the 150523 sixth order fit
;pkcoefs: [150.27240, 83.318230, -0.75447103, 0.0072940427, -7.1697400e-05, 4.8542551e-07, -1.4693739e-09], ;the 150523 sixth order fit
;pkcoefs: [243.07574,79.002059,-0.54537681,0.0018460401],  ;150522 kb15 flats (85 orders extracted)
;pkcoefs: [164.11762,80.526294,-0.55823471,0.0018907195],  ;150519 kb15 flats (83 orders extracted)
;pkcoefs: [72.380474,83.400651,-0.63663337,0.0027000054],  ;150516 bg7 flats (only 59 orders extracted)
nords:  84,                    ; number of orders to extract
resolutionarr: ['low','med','hgh'],  ; observing modes 
xwids: [30,30,30],             ; extraction width, binned pixels 
dpks:  [-1,-1,-1],             ; peak shift for each mode, binned pixels 
swid: 32,        ;the "swath" width used in fords. This is the number of chunks to break the order into (in the dispersion direction) when finding peaks to fit a polynomial to for order locations.
poff: [10, 10, 10, 10], ;cross-disp half width for order findings (see fords.pro)
binnings: ['1x1','3x1','4x4'], ; binning in each mode, row x column
;`blues` has two options:
;1. combine exposures for order extraction. This
;requires taking two sets of quartz exposures with two exposure times.
;The first, which should be called "quartz" in the logsheet, are
;exposures that are *not* saturated in the red, but have few counts
;in the blue. The second set, labeled "blues" in the logsheet, should
;have plenty of counts in the blue, which will make the red end saturated.
;0. Only use exposures labeled "quartz" in the logsheet for image extraction
;and flat-fielding.
blues: 1,
;use blues from any resolution mode to process the current resolution mode:
any_res_blues: 1, 
;the sigmoid midpoint for combining red and blue flats
blues_sig_mid: 1150, 
;use the blue frames for flat-fielding
blues_flat: 1, 
;the order to use for the sigmoid midpoint when combining flats:
blues_flat_ord: 14, 
debug: 11}
;(*): denotes this value is set in sorting_hat by the options when calling it
;DEBUG MODES:
;0. No stops. Prints as little as possible. No plots.
;1. No stops. Prints a little more. Poscript and PNG Plots for quality control.
;2. Stops in debugging locations. PS and PNG plots. Prints a lot. 
;3. Stops in debugging locations. Plots to screen. Prints a lot. 
;4. Everything. Run this when VUMPS has been modified to determine new order locations. 
;	 Once finished, copy the new best fit order locations to the "pkcoefs" tag above.
;11. Whoa.
