{redpar,                       ; named structure, passed by reference
rootdir: '/',             ; root directory. All other paths are relative to rootdir
logdir:  'tous/vumps/logsheets/',         ; log sheets 
logstdir:  'tous/vumps/logstructs/',         ; log sheets 
iodspecdir: 'tous/vumps/iodspec/',        ; reduced spectra in RDSK/WRDSK format
plotsdir: '/Users/matt/Sites/vumps/red/plots/', ; directory to put encapsulated postscript and PNG plots
fitsdir:    'tous/vumps/fitspec/',        ; reduced spectra in FITS format
thiddir:    'tous/vumps/thid/wavfile/',   ; wav saved in in *.dat files, not used
thidfiledir: 'tous/vumps/thid/thidfile/', ; thid saved in *.thid files
rawdir: 'raw/vumps/',                ; raw files
imdir:   'yymmdd/',            ; yymmdd/ image directory with raw night data (*)
date:   'yymmdd',            ; yymmdd/ image directory with raw night data (*)
seqnum:   'flat',            ; the image sequence number (*)
versiond:   'date',            ; systime when this file was created (*)
versionn:   '3.0',            ; version of the reduction code
red_prefix: 'r',               ; prepend reduced files with this additional prefix
prefix:  'chiyymmdd.',         ; file prefix (*)
suffix: '.fit',                ; the file suffix (e.g., .fit, .fits, .FITS, .FITZ)
flatdir:  'tous/vumps/flats/',            ; summed flat fields
biasdir:  'tous/vumps/medbias/',            ; median bias frames
biasmode: 0,            ; 0: use median bias frame, 1: use median overscan row
orderdir: 'tous/vumps/orders/',           ; order locations
barydir:  'tous/VUMPS/bary/',             ; code for barycentric correction? 
xdim: 4200,                  ;number of pixels in x dimension
ydim: 4112,                  ;number of pixels in y dimension
xtrim: [0,4087],             ; trim along dispersion direction, UNBINNED pixels
ytrim: [0,4111],             ; vertical trim in cross-disp., UNBINNED pixels
readmodes:  ['fast','medium', 'slow'], ; readout modes
nlc: [[0, 0],[0, 0]], ;non-linearity coefs. [left,right] in fast and normal
;order of gains are botleft, botright, upright, upleft
gains: [[2.07,2.10,2.08,2.16], [1.99,2.00,2.03,2.06], [1.64,1.62,1.67,1.68]], ; gain  [ [4*]fast, [4*]med, [4*]slow], el/ADU  corrected
ron:   7.,                     ; RON estimate [ADU], to be calculated from bias (*)
gain:   1.,                    ; actual gain [el/adu] (*)
binning: [1,1],                ; will contain actual binning [row,col] from the header (*)
mode:  0,                      ; index of the actual mode (*)
;FLATNORM OPTIONS:
; OLD 0. no normalization. Flatfield with median flat AFTER image extraction
;0. no normalization. Flatfield with weighted mean flat AFTER image extraction
;1. normalize the flats before finding the median flat. flat AFTER image extraction
;2. normalize BEFORE image extraction. No normalization. Flat field with a running median flat.
;3, use rayclean to coadd the extracted quartz spectra.
flatnorm:  1,                      
minflatval: 1d4,       ; minimum acceptable value for flats 
slicerflat:  1,                      ; set this to 1 to use the narrow slit + shift & width change for order finding
pkcoefs: [26.4117,34.9785,0.114412,0.00182212],  ;yt=2 poly coefs of peak maxima @center y(iord), unbinned pixels
pkcoefs1: [26.4517d,35.0451d,0.112029d,0.00188384d], ;use this for data between 120302 - 120501 (torrent logic problem)
nords:  62,                    ; number of orders to extract
modes: ['low','med','hgh'],  ; observing modes 
xwids: [8,12,8,5,18],             ; extraction width, binned pixels 
dpks:  [0,-5,0,0,0],             ; peak shift for each mode, binned pixels 
binnings: ['3x1','3x1','3x1','4x4', '1x1'], ; binning in each mode, row x column
debug: 4}                      ; 1 in debug mode, with plots and stops

;(*): denotes this value is set in sorting_hat by the options when calling it
;DEBUG MODES1
;0. No stops. Prints as little as possible. No plots.
;1. No stops. Prints a little more. Poscript and PNG Plots for quality control.
;2. Stops in debugging locations. PS and PNG plots. Prints a lot. 
;3. Stops in debugging locations. Plots to screen. Prints a lot. 
;4. Everything. Run this when VUMPS has been modified to determine new order locations. 
;	 Once finished, copy the new best fit order locations to the "pkcoefs" tag above.